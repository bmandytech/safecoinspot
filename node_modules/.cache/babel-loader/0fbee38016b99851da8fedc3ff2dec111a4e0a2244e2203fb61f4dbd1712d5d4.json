{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\crypto-frontend\\\\src\\\\components\\\\WithdrawForm.js\",\n  _s = $RefreshSig$();\n// src/components/WithdrawForm.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WithdrawForm = ({\n  selectedCoin,\n  setWithdrawAmount,\n  withdrawAmount\n}) => {\n  _s();\n  const [recipientAddress, setRecipientAddress] = useState('');\n  const [loading, setLoading] = useState(false); // Loading state for the withdrawal process\n  const [error, setError] = useState(''); // Error state to handle any errors\n  const [success, setSuccess] = useState(''); // Success state to show a success message\n\n  // Basic validation for form fields\n  const validateForm = () => {\n    if (!withdrawAmount || withdrawAmount <= 0) {\n      setError('Please enter a valid amount');\n      return false;\n    }\n    if (!recipientAddress) {\n      setError('Please enter a recipient address');\n      return false;\n    }\n    setError(''); // Clear error if all fields are valid\n    return true;\n  };\n  const handleWithdraw = async () => {\n    if (!validateForm()) return; // Only proceed if validation passes\n\n    setLoading(true); // Set loading state to true\n\n    try {\n      const response = await axios.post(`/api/wallets/withdraw`, {\n        coin: selectedCoin,\n        amount: withdrawAmount,\n        address: recipientAddress\n      });\n      setSuccess(`Withdrawal successful: ${response.data.transactionId}`);\n      setWithdrawAmount(''); // Reset withdraw amount after success\n      setRecipientAddress(''); // Reset recipient address after success\n    } catch (error) {\n      console.error('Error withdrawing:', error);\n      setError('Withdrawal failed, please try again.');\n    } finally {\n      setLoading(false); // Set loading state to false once done\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold\",\n      children: [\"Withdraw \", selectedCoin]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: withdrawAmount,\n      onChange: e => setWithdrawAmount(e.target.value),\n      placeholder: \"Amount\",\n      className: \"w-full p-2 mt-2 border border-gray-300 rounded\",\n      disabled: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: recipientAddress,\n      onChange: e => setRecipientAddress(e.target.value),\n      placeholder: \"Recipient Address\",\n      className: \"w-full p-2 mt-2 border border-gray-300 rounded\",\n      disabled: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mt-2\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-green-500 mt-2\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleWithdraw,\n      className: \"w-full bg-red-500 text-white p-2 rounded mt-4\",\n      disabled: loading // Disable button while loading\n      ,\n      children: loading ? 'Processing...' : 'Withdraw'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(WithdrawForm, \"1xLaXEPTr8/t6tGN3L/8ZSsAEOw=\");\n_c = WithdrawForm;\nexport default WithdrawForm;\nvar _c;\n$RefreshReg$(_c, \"WithdrawForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","WithdrawForm","selectedCoin","setWithdrawAmount","withdrawAmount","_s","recipientAddress","setRecipientAddress","loading","setLoading","error","setError","success","setSuccess","validateForm","handleWithdraw","response","post","coin","amount","address","data","transactionId","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/crypto-frontend/src/components/WithdrawForm.js"],"sourcesContent":["// src/components/WithdrawForm.js\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst WithdrawForm = ({ selectedCoin, setWithdrawAmount, withdrawAmount }) => {\r\n  const [recipientAddress, setRecipientAddress] = useState('');\r\n  const [loading, setLoading] = useState(false);  // Loading state for the withdrawal process\r\n  const [error, setError] = useState('');  // Error state to handle any errors\r\n  const [success, setSuccess] = useState('');  // Success state to show a success message\r\n\r\n  // Basic validation for form fields\r\n  const validateForm = () => {\r\n    if (!withdrawAmount || withdrawAmount <= 0) {\r\n      setError('Please enter a valid amount');\r\n      return false;\r\n    }\r\n    if (!recipientAddress) {\r\n      setError('Please enter a recipient address');\r\n      return false;\r\n    }\r\n    setError('');  // Clear error if all fields are valid\r\n    return true;\r\n  };\r\n\r\n  const handleWithdraw = async () => {\r\n    if (!validateForm()) return;  // Only proceed if validation passes\r\n\r\n    setLoading(true);  // Set loading state to true\r\n\r\n    try {\r\n      const response = await axios.post(`/api/wallets/withdraw`, {\r\n        coin: selectedCoin,\r\n        amount: withdrawAmount,\r\n        address: recipientAddress,\r\n      });\r\n      setSuccess(`Withdrawal successful: ${response.data.transactionId}`);\r\n      setWithdrawAmount('');  // Reset withdraw amount after success\r\n      setRecipientAddress('');  // Reset recipient address after success\r\n    } catch (error) {\r\n      console.error('Error withdrawing:', error);\r\n      setError('Withdrawal failed, please try again.');\r\n    } finally {\r\n      setLoading(false);  // Set loading state to false once done\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-8\">\r\n      <h3 className=\"text-lg font-semibold\">Withdraw {selectedCoin}</h3>\r\n\r\n      {/* Withdraw Amount */}\r\n      <input\r\n        type=\"number\"\r\n        value={withdrawAmount}\r\n        onChange={(e) => setWithdrawAmount(e.target.value)}\r\n        placeholder=\"Amount\"\r\n        className=\"w-full p-2 mt-2 border border-gray-300 rounded\"\r\n        disabled={loading}\r\n      />\r\n\r\n      {/* Recipient Address */}\r\n      <input\r\n        type=\"text\"\r\n        value={recipientAddress}\r\n        onChange={(e) => setRecipientAddress(e.target.value)}\r\n        placeholder=\"Recipient Address\"\r\n        className=\"w-full p-2 mt-2 border border-gray-300 rounded\"\r\n        disabled={loading}\r\n      />\r\n\r\n      {/* Error message */}\r\n      {error && <p className=\"text-red-500 mt-2\">{error}</p>}\r\n\r\n      {/* Success message */}\r\n      {success && <p className=\"text-green-500 mt-2\">{success}</p>}\r\n\r\n      {/* Submit Button */}\r\n      <button\r\n        onClick={handleWithdraw}\r\n        className=\"w-full bg-red-500 text-white p-2 rounded mt-4\"\r\n        disabled={loading}  // Disable button while loading\r\n      >\r\n        {loading ? 'Processing...' : 'Withdraw'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WithdrawForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}